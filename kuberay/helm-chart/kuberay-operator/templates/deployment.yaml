apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kuberay-operator.fullname" . }}
  labels:
{{ include "kuberay-operator.labels" . | indent 4 }}
{{- if .Values.labels }}
{{- toYaml .Values.labels | nindent 4 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kuberay-operator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kuberay-operator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: kuberay-operator
        {{- if .Values.labels }}
        {{- toYaml .Values.labels | nindent 8 }}
        {{- end }}
      {{- if .Values.annotations }}
      annotations:
        {{- toYaml .Values.annotations | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name  }}
      {{- if and (.Values.logging.baseDir) (.Values.logging.fileName) }}
      volumes:
        - name: kuberay-logs
          emptyDir: {}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and (.Values.logging.baseDir) (.Values.logging.fileName) }}
          volumeMounts:
            - name: kuberay-logs
              mountPath: "{{ .Values.logging.baseDir }}"
          {{- end }}
          command:
            - /manager
          args:
            {{- $argList := list -}}
            {{- if .Values.batchScheduler.enabled -}}
            {{- $argList = append $argList "--enable-batch-scheduler" -}}
            {{- end -}}
            {{- $watchNamespace := "" -}}
            {{- if and .Values.singleNamespaceInstall (not .Values.watchNamespace) -}}
            {{- $watchNamespace = .Release.Namespace -}}
            {{- else if .Values.watchNamespace -}}
            {{- $watchNamespace = join "," .Values.watchNamespace -}}
            {{- end -}}
            {{- if $watchNamespace -}}
            {{- $argList = append $argList "--watch-namespace" -}}
            {{- $argList = append $argList $watchNamespace -}}
            {{- end -}}
            {{- if and (.Values.logging.baseDir) (.Values.logging.fileName) -}}
            {{- $argList = append $argList "--log-file-path" -}}
            {{- $argList = append $argList (printf "%s/%s" .Values.logging.baseDir .Values.logging.fileName) -}}
            {{- end -}}
            {{- if .Values.logging.stdoutEncoder -}}
            {{- $argList = append $argList "--log-stdout-encoder" -}}
            {{- $argList = append $argList .Values.logging.stdoutEncoder -}}
            {{- end -}}
            {{- if .Values.logging.fileEncoder -}}
            {{- $argList = append $argList "--log-file-encoder" -}}
            {{- $argList = append $argList .Values.logging.fileEncoder -}}
            {{- end -}}
            {{- (printf "\n") -}}
            {{- $argList | toYaml | indent 12 }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          {{- toYaml .Values.env | nindent 12}}
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
