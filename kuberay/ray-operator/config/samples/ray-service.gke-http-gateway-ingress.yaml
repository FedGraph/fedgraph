# Kubernetes Gateway API - HTTPRoute Example
# This example usage Kubernetes Gateway API to create a HTTPRoute to RayService Serve Endpoint.
## Gateway API for Ingress
# https://gateway-api.sigs.k8s.io/#gateway-api-for-ingress
#
## GKE GatewayAPI and GatewayClass
# For more information on GatewayClasses on Google Kubernetes Engine, see:
# - https://cloud.google.com/kubernetes-engine/docs/concepts/gateway-api
# - https://cloud.google.com/kubernetes-engine/docs/how-to/gatewayclass-capabilities
## Enable Gateway API
# https://cloud.google.com/kubernetes-engine/docs/how-to/deploying-gateways#enable-gateway
#
# To test this out:
# curl --location --request POST 'http://ai.example.com/v1/chat/completions' \
# --header 'Content-Type: application/json' \
#--data-raw '{
#    "model": "tiiuae/falcon-7b-instruct",
#    "messages": [
#      {"role": "system", "content": "You are a helpful assistant."},
#      {"role": "user", "content": "What are the top 5 most popular Indian dishes? Please be brief."}
#    ]
#}'
#
---
kind: Gateway
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: ray-service-external-http
spec:
  gatewayClassName: gke-l7-global-external-managed
  listeners:
  - name: http
    protocol: HTTP
    port: 80
    allowedRoutes:
       namespaces:
         from: Same

---
kind: HTTPRoute
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: ray-service-serve-endpoint
spec:
  hostnames:
  - "ai.example.com"
  parentRefs:
  - kind: Gateway
    name: ray-service-external-http
  rules:
  -
    matches:
    - path:
        type: PathPrefix
        value: "/v1/chat/completions"
    - path:
        type: PathPrefix
        value: "/v1/completions"
    backendRefs:
    - name: ray-service-serve-svc
      port: 8000

---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  name: endpoint-healthcheck
spec:
  default:
    checkIntervalSec: 10
    timeoutSec: 10
    healthyThreshold: 3
    unhealthyThreshold: 3
    logConfig:
      enabled: true
    config:
      type: HTTP
      httpHealthCheck:
        port: 8000
        requestPath: "/-/routes"
  targetRef:
    group: ""
    kind: Service
    name: ray-service-serve-svc
